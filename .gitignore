# Created by https://www.toptal.com/developers/gitignore/api/jupyternotebooks,python
# Edit at https://www.toptal.com/developers/gitignore?templates=jupyternotebooks,python

# 파일
.DS_Store
.Trash/
*.env
# *.db
*.pdf
*.pkl
# *.md
*.gguf
*.faiss
*.index
*.sqlite3
*.bin
*.wav

.idea/
.vscode/
*.code-workspace

# ChromaDB
db/

# 폴더
*/cache/*
*/keys/*
*/working/*
*/convert/*
*/convert2/*
*/unuse/*
*/corpus/*
*/mlruns/*
working/

### JupyterNotebooks ###
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# IPython
profile_default/
ipython_config.py

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Logs and other temporary files
*.log
*.tmp
*.bak

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook

# IPython

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
lc_venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# LSP config files
pyrightconfig.json

# End of https://www.toptal.com/developers/gitignore/api/jupyternotebooks,python

# GCP
vertex-ai-key.json
gen-lang-client-0969650881-efb8d03eaa79.json

# git-commit-message 관련 = 자동 커밋 로그 백업 (raw)
docs/changelog/langchain-commit-message-from-git.md

# 커밋 자동 생성 관련 캐시 및 결과물
scripts/gen_commit_cache.json 

# 임시 or memo
temp/
.env
requirements.txt.backup

# streamlit-deploy 브랜치에서 만들었던 requirements.txt
requirements-streamlit.txt

# java 설치 후 생긴 파일
07_Text_Splitter/hs_err_pid25274.log

# FAISS 이후 생성된 파일 및 폴더
09_VectorStore/faiss_db/
09_VectorStore/faiss_light_index/
12_RAG/faiss_index/
12_RAG/cache/

# 12번 폴더
12_RAG/utils/lcel_concept_splits.pkl
12_RAG/utils/lcel_concept_splits_2.pkl
12_RAG/utils/lcel_concept_splits_3.pkl
12_RAG/utils/lcel_concept_counts.pkl
12_RAG/utils/lcel_concept_docs_texts.pkl
12_RAG/utils/lcel_concept_docs.pkl
12_RAG/04_RAPTOR-Long-Context-RAG-CODE.ipynb
12_RAG/04_RAPTOR-Long-Context-RAG-CODE_2.ipynb
12_RAG/04_RAPTOR-Long-Context-RAG-CODE_3.ipynb
12_RAG/RAPTOR/
12_RAG/RAPTOR2/
12_RAG/RAPTOR3/
12_RAG/images/output_3.png
12_RAG/images/output_4.png
12_RAG/images/output_5.png
12_RAG/images/output_6.png
12_RAG/images/output_8.png
12_RAG/images/transformer_T5.png

# 14번 폴더
14_Chains/data/finance.db
14_Chains/Chinook.db

# 15번 폴더
# test용 폴더
15_Evaluations/test/ 


